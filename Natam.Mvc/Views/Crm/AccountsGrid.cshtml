@model Pro.Models.AccountQuery
@{
    Layout = "~/Views/Shared/_View.cshtml";
    ViewBag.Title = "Buildings";
}
@section head { 

    @Scripts.Render("~/bundles/jqx")
    @Scripts.Render("~/bundles/jqxgrid")
    <script type="text/javascript" src="~/jqwidgets/jqxdata.export.js"></script>
    <link rel="stylesheet" href="~/Scripts/app/app-form.css" type="text/css" />
    <style type="text/css">
        input {
            direction:rtl;text-align:right;
        }
    </style>
}


@section scripts {

    <script type="text/javascript">
   var isMobile = app.IsMobile();
    var NScustomers = {};

    var page_config = {
        title: '',
        htitle: '',
        msg_confirm: '',
        msg_alert: '',

        load: function (accType) {

            this.title = app_accounts.displayAccountType(accType);
            this.htitle = "הגדרת " + this.title;
            this.msg_confirm = "פעולה זו תסיר את ה" + this.title + " מרשימת ה" + this.title + " , האם להמשיך?";
            this.msg_alert = "ה" + this.title + " הוסר מהמערכת";
            $("#hTitle").text("רשימת " + this.title);
        }

    };

    $(document).ready(function () {
        JSON.useDateParser();
        var theme = 'Arctic';

        var allowEdit = ('@ViewBag.UserRole' == 9) ? 1 : 0;

            page_config.load('@Model.AccType');

            // prepare the data
            var source =
            {
                datatype: "json",
                datafields: [
                    { name: 'AccountId', type: 'number' },
                    { name: 'AccountName', type: 'string' },
                    { name: 'AccountType', type: 'number' },
                    { name: 'Address', type: 'string' },
                    { name: 'City', type: 'string' },
                    { name: 'ZipCode', type: 'number' },
                    //{ name: 'ContactName', type: 'string' },
                    { name: 'Phone1', type: 'string' },
                    { name: 'Phone2', type: 'string' },
                    { name: 'Phone3', type: 'string' },
                    { name: 'Creation', type: 'date' },
                    //{ name: 'Email', type: 'string' },
                    { name: 'Fax', type: 'string' },
                    { name: 'WebSite', type: 'string' },
                    { name: 'Details', type: 'string' }

                ],
                id: 'AccountId',
                type:'POST',
                url: '@Url.Action("GetAcoountsGrid", "Crm")',

            pagenum: 3,
            pagesize: 20,
            pager: function (pagenum, pagesize, oldpagenum) {
                // callback called when a page or page size is changed.
            }
        };

        source.data = { 'acctype': '@Model.AccType' };


        //var dataAdapter = new $.jqx.dataAdapter(source);
        var dataAdapter = new $.jqx.dataAdapter(source, {
            async: false,
            loadComplete: function (data) { },
            loadError: function (xhr, status, error) { alert(' status: ' + status + '\n error ' + error) }
        });
        var cellsrenderer = function (row, columnfield, value, defaulthtml, columnproperties) {

            //return '<div style="text-align:center"><a href="CustomerDef?id=' + value + '" >הצג</a></div>';
            var link = '<div style="text-align:center"><a href="javascript:customers_accountEdit(' + value + ')" >הצג</a>';
            //if (allowEdit > 0)
            //    link += ' | <a href="javascript:customers_accountDelete(' + value + ')" >הסרה</a>';

            return link + '</div>';
        };
        var contactcellsrenderer = function (row, columnfield, value, defaulthtml, columnproperties) {
            var accid = $('#jqxgrid').jqxGrid('getrowdata', row).AccountId;

            return '<div style="text-align:center;direction:rtl;margin:5px;"><a href="#" onclick="app_contacts.contactEdit(' + value + ',' + accid + ',0);" >הצג</a> | <a href="#" onclick="app_contacts.contactDelete(' + value + ');">הסר</a></div>'
        };

        NScustomers.nastedContactGrids = new Array();

        var initContactGrid = function (tabControl, index, id) {
            //contacts
            var nastedcontainer = $('<div style="float:right;margin:5px"></div>');
            nastedcontainer.rtl = true;
            var nastedsource = {
                datafields: [
                      { name: 'ContactId', type: 'number' },
                      { name: 'ParentId', type: 'number' },
                      { name: 'ContactName', type: 'string' },
                      { name: 'Title', type: 'string' },
                      { name: 'Email', type: 'string' },
                      { name: 'Mobile', type: 'string' }
                ],
                datatype: "json",
                id: 'ContactId',
                type: 'POST',
                url: '@Url.Action("GetContactsView", "Crm")',
                data: { 'parentId': id, 'role': 0, 'uk': null }
            }
            NScustomers.nastedContactGrids[index] = nastedcontainer;

            var nastedAdapter = new $.jqx.dataAdapter(nastedsource);
            nastedcontainer.jqxGrid({
                source: nastedAdapter, width: '90%', height: 130,
                rtl: true,
                columns: [
                  {
                      text: '*', dataField: 'ContactId', width: 100, cellsalign: 'right', align: 'center',
                      cellsrenderer: function (row, columnfield, value, defaulthtml, columnproperties) {
                          var accid = id;// $('#jqxgrid').jqxGrid('getrowdata', row).AccountId;
                          return '<div style="text-align:center;direction:rtl;margin:5px;"><a href="#" onclick="customers_contactEdit(' + value + ',' + accid + ');" >הצג</a> | <a href="#" onclick="customers_contactDelete(' + value + ');">הסר</a></div>'
                      }
                  },
                  { text: 'שם איש קשר', datafield: 'ContactName', cellsalign: 'right', align: 'center' },
                  { text: 'תפקיד', datafield: 'Title', width: 150, cellsalign: 'right', align: 'center' },
                  {
                      text: 'דואל', datafield: 'Email', width: 150, align: 'center', cellsrenderer: function (row, datafield, value) {
                          return '<a href="mailto:' + value + '">' + value + '</a>';
                      }
                  },
                  {
                      text: 'טלפון נייד', datafield: 'Mobile', width: 200, align: 'center', cellsrenderer: function (row, datafield, value) {
                          return isMobile ? '<a style="float:right;"  href="tel:' + value + '">' + value + '</a>' : '<span style="float:right">' + value + '</span>';
                      }
                  }
                ]
            });
            //var additem = $('<div style="margin:10px"><input type="button" value="הוסף" title="הוספת איש קשר חדש" /></div>')
            //.click(function () {
            //    NScustomers.contactDialog = contactEdit(0, id, 0);
            //});
            //var refreshcontacts = $('<div style="margin:10px"><input type="button" value="רענן" title="רענון רשימת אנשי קשר" /></div>')
            //.click(function () {
            //    nastedAdapter.dataBind();
            //});

            var additem = $('<a title="הוספת איש קשר חדש" href="#" style="padding-left:10px;padding-right:10px;float:right;">הוסף</a>')
                .click(function () {
                    NScustomers.contactDialog = app_contacts.contactEdit(0, id, 0);
                });
            var refreshcontacts = $('<a title="רענון רשימת אנשי קשר" href="#" style="padding-left:10px;float:right;">רענון</a>')
            .click(function () {
                nastedAdapter.dataBind();
            });

            $(tabControl).append(additem);
            $(tabControl).append(refreshcontacts);
            $(tabControl).append(nastedcontainer);

        };


        var initrowdetails = function (index, parentElement, gridElement, datarecord) {

            NScustomers.currentIndex = index;

            var tabsdiv = null;
            var information = null;
            var notes = null;

            tabsdiv = $($(parentElement).children()[0]);
            if (tabsdiv != null) {
                information = tabsdiv.find('.information');
                notes = tabsdiv.find('.notes');
                var title = tabsdiv.find('.title');
                title.text(datarecord.AccountName);
                var tabcontacts = tabsdiv.find('.tabcontacts');
                var taboptions = tabsdiv.find('.taboptions');

                var container = $('<div style="margin: 5px;text-align:right;"></div>')
                container.rtl = true;
                container.appendTo($(information));

                var leftcolumn = $('<div style="float: left; width: 45%;direction:rtl;"></div>');
                var rightcolumn = $('<div style="float: right; width: 40%;direction:rtl;"></div>');
                container.append(leftcolumn);
                container.append(rightcolumn);

                var divLeft = $("<div style='margin: 10px;'><b>טלפון 1:</b> " + datarecord.Phone1 + "</div>" +
                    "<div style='margin: 10px;'><b>טלפון 2:</b> " + datarecord.Phone2 + "</div>" +
                    "<div style='margin: 10px;'><b>קוד לקוח:</b> " + datarecord.AccountId + "</div>");
                divLeft.rtl = true;
                var divRight = $(
                    //"<div style='margin: 10px;'><b>מייל:</b> " + datarecord.Email + "</div>" +
                    "<div style='margin: 10px;'><b>פקס:</b> " + datarecord.Fax + "</div>" +
                    "<div style='margin: 10px;'><b>אתר:</b> " + datarecord.WebSite + "</div>");

                divRight.rtl = true;
                $(leftcolumn).append(divLeft);
                $(rightcolumn).append(divRight);

                var notescontainer = $('<div style="white-space: normal; margin: 5px;text-align:right;"><span>' + datarecord.Details + '</span></div>');
                notescontainer.rtl = true;
                $(notes).append(notescontainer);
                
                var accid = datarecord.AccountId;//parseInt(datarecord.AccountId);

                var optionscontainer = $('<div style="white-space: normal; margin: 5px;text-align:right;"></div>');
                optionscontainer.rtl = true;

                var linkEdit = $('<div style="margin:5px"><a href="#" >הצג ' + page_config.title + '</a></div>')
                .click(function () {
                    customers_accountEdit(accid);
                });
                var linkRemove = $('<div style="margin:5px"><a href="#" >הסר ' + page_config.title + '</a></div>')
                .click(function () {
                    customers_accountDelete(accid);
                });

                optionscontainer.append(linkEdit);
                if (allowEdit > 0)
                    optionscontainer.append(linkRemove);
                taboptions.append(optionscontainer);

                //contacts
                initContactGrid(tabcontacts, index, accid);

                $(tabsdiv).jqxTabs({ width: '95%', height: 170, rtl: true });
            }
        };

        // create Tree Grid
        $("#jqxgrid").jqxGrid(
        {
            width: '100%',
            autoheight: true,
            rtl: true,
            source: dataAdapter,
            localization: getLocalization('he'),
            pagermode: 'simple',
            pageable: true,
            sortable: true,
            showfilterrow: true,
            filterable: true,
            rowdetails: true,
            rowdetailstemplate: { rowdetails: "<div style='margin: 10px;'><ul style='margin-right: 30px;'><li class='title'></li><li>פרטים</li><li>אנשי קשר</li><li>אפשרויות</li></ul><div class='information'></div><div class='notes'></div><div class='tabcontacts'></div><div class='taboptions'></div></div>", rowdetailsheight: 200 },
            ready: function () {
                $("#jqxgrid").jqxGrid('showrowdetails', 0);
            },
            initrowdetails: initrowdetails,
            columns: [
              { text: '*', dataField: 'AccountId', filterable: false, width: 80, cellsalign: 'right', align: 'center', cellsrenderer: cellsrenderer },
              { text: 'שם לקוח', dataField: 'AccountName', filtercondition: 'CONTAINS', cellsalign: 'right', align: 'center' },
              //{ text: 'סוג לקוח', dataField: 'AccountType', width: 100, cellsalign: 'right', align: 'center' },
              { text: 'עיר', dataField: 'City', filtercondition: 'starts_with', cellsalign: 'right', align: 'center' },
              { text: 'כתובת', dataField: 'Address', filtercondition: 'starts_with', cellsalign: 'right', align: 'center' },
              //{ text: 'איש קשר', dataField: 'ContactName', filtercondition: 'starts_with', width: 120, cellsalign: 'right', align: 'center' },
              {
                  text: 'טלפון', dataField: 'Phone1', filtercondition: 'starts_with', width: 150, cellsalign: 'right', align: 'center', cellsrenderer: function (row, datafield, value) {
                      return isMobile ? '<a style="float:right;"  href="tel:' + value + '">' + value + '</a>' : '<span style="float:right">' + value + '</span>';
                  }
              },
              { text: 'מועד עדכון', type: 'date', dataField: 'Creation', width: 120, cellsformat: 'd', cellsalign: 'right', align: 'center' }
            ]
        });

        //$("#linkCustomerDef").jqxLinkButton({ width: '120', height: '30' });
        $('#btnclearfilter').jqxButton();
        $('#btnclearfilter').click(function () {
            $("#jqxgrid").jqxGrid('clearfilters');
        });
        $('#btnCustomerDef').jqxButton();
        $('#btnCustomerDef').click(function () {
            customers_accountEdit(0);
        });

        $('#btnCustomerAll').jqxButton();
        $('#btnCustomerAll').click(function () {
            $("#jqxgrid").jqxGrid('source').dataBind();
        });
        //$("#excelExport").jqxButton({ width: '120', height: '30' });
        //$("#excelExport").click(function () {
        //    $("#jqxgrid").jqxGrid('exportdata', 'xls', 'Customers',true, null, false,null,'utf-8');

        //});
    });

    function triggerContactComplete(accid) {
        customers_contactRefresh();
        app_dialog.dialogClose(NScustomers.contactDialog);
    };

    function triggerAccComplete(accType, accid) {
        customers_accounsRefresh();
        app_dialog.dialogClose(NScustomers.accountDialog);
    };

    function triggerNewsComplete(accid) {
        customers_newsRefresh();
        app_dialog.dialogClose(NScustomers.newsDialog);
    };

    function customers_contactRefresh() {
        try {
            var i = NScustomers.currentIndex;
            var g = NScustomers.nastedContactGrids[i];
            var adapter = g.jqxGrid('source');
            adapter.dataBind();
        }
        catch (e) {
            alert(e);
        }
    };

    function customers_contactDelete(id) {
        app_contacts.contactDelete(id, false);
        customers_contactRefresh();
    }

    function customers_contactEdit(id, accid) {
        app_contacts.contactEdit(id, accid, 0);
        customers_contactRefresh();
    }

    function customers_newsRefresh() {
        try {
            var i = NScustomers.currentIndex;
            var g = NScustomers.nastedNewsGrids[i];
            var adapter = g.jqxGrid('source');
            adapter.dataBind();
        }
        catch (e) {
            alert(e);
        }
    };
    function customers_newsDelete(id, accid) {
        app_accounts.AccountNewsRemove(id, accid);
        customers_newsRefresh();
    }

    function customers_accounsRefresh() {
        try {
            $("#jqxgrid").jqxGrid('source').dataBind();
        }
        catch (e) {
            alert(e);
        }
    };
    function customers_accountEdit(id) {
        var accountType = '@Model.AccType';
        NScustomers.accountDialog = app_accounts.accountEdit(id, accountType);

    }
    function customers_accountDelete(id) {

        var ok = app_accounts.accountDelete(id, '@Model.AccType');
        if (ok)
            customers_accounsRefresh();
    }


    </script>
}


<div class="breadcrumbs">
@Html.ActionLink("Home", "Index", "Home")>
@Html.ActionLink("Main", "Main", "Home")>
<a href="javascript:parent.history.back()">Crm</a> >
@ViewContext.RouteData.Values["action"].ToString()
</div>


<div class="clear"></div>

<div class="global">
    <div class="container">

        <div class="grid-wrap">
            <div class="box-title">
                <h3 id="hTitle"></h3>
            </div>
            
                <div style="display: inline; float: right">

                    <input value="הוספה" id="btnCustomerDef" type="button" class="btn-default btn2" />
                    <input value="הסר סינון" id="btnclearfilter" type="button" class="btn-default btn2" />
                    <input value="רענון" id="btnCustomerAll" type="button" class="btn-default btn2" />
                    
                </div>

                <div id="jqxWidget">
                    <div id="jqxgrid" style="position:relative;z-index:1;"></div>
                    <div style="margin-top: 30px;">
                        <div id="cellbegineditevent"></div>
                        <div style="margin-top: 10px;" id="cellendeditevent"></div>
                    </div>
                </div>
            </div>
    </div>
</div>
<script type="text/javascript">
   app_menu.activeLayoutMenu("liBuilding");
</script>
