@model Pro.Models.BuildingQuery
@{
    Layout = "~/Views/Shared/_View.cshtml";
    ViewBag.Title = "Buildings";

   
}
@section head { 

    @Scripts.Render("~/bundles/jqx")
    @Scripts.Render("~/bundles/jqxgrid")
    <script src="~/Scripts/app/app-jqx-grid-2.0.js"></script>

    <link rel="stylesheet" href="~/Scripts/app/app-form.css">


    <style type="text/css">

        .row_detail {margin: 10px;direction:rtl;}
        .row_link {margin: 10px;direction:rtl;font-size:16px}
        input {
            direction:rtl;text-align:right;
        }
        .jqx-grid-cell {
            border: none;
        }

    </style>
}


@section scripts {

    <script type="text/javascript">

        var isMobile = app.IsMobile();

        $(document).ready(function () {
            JSON.useDateParser();
            var theme = 'Arctic';

            // prepare the data
            var source =
            {
                //sort: customsortfunc,
                datatype: "json",
                datafields: [
                    { name: 'BuildingId', type: 'number' },
                    { name: 'BuildingOwnerId', type: 'number' },
                    { name: 'CityCode', type: 'number' },
                    { name: 'CityName', type: 'string' },
                    { name: 'BuildingName', type: 'string' },
                    { name: 'StreetId', type: 'number' },
                    { name: 'StreetName', type: 'string' },
                    { name: 'StreetNo', type: 'string' },
                    { name: 'SizeTotal', type: 'number' },
                    { name: 'BuildingPopulateTime', type: 'date' },
                    { name: 'OwnerName', type: 'string' },
                    { name: 'ManagementName', type: 'string' },
                    { name: 'ManagementCompany', type: 'number' },
                    { name: 'Investment', type: 'bool' },
                    { name: 'Memo', type: 'string' },
                    { name: 'LastUpdate', type: 'date' },
                    { name: 'FloorDefined', type: 'number' }
                    
                ],
                id: 'BuildingId',
                type:'POST',
                url: '@Url.Action("GetBuildingGrid", "Building")',
                //pagenum: 3,
                pagesize: 20,
                root: 'Rows',
                beforeprocessing: function (data) {
                    source.totalrecords = data.TotalRows;
                },
                pager: function (pagenum, pagesize, oldpagenum) {
                    // callback called when a page or page size is changed.
                },
                filter: function () {
                    // update the grid and send a request to the server.
                    $("#jqxgrid").jqxGrid('updatebounddata');
                },
                sort: function () {
                    // update the grid and send a request to the server.
                    $("#jqxgrid").jqxGrid('updatebounddata');
                }
            };
            
            source.data = { 'QueryType': '@Model.QueryType', 'Area': '@Model.Area', 'DealType': '@Model.DealType', 'PurposeType': '@Model.PurposeType', 'AreaSizeMin': '@Model.AreaSizeMin', 'AreaSizeMax': '@Model.AreaSizeMax', 'BuildingName': '@Model.BuildingName', 'StreetId': '@Model.StreetId', 'StreetNo': '@Model.StreetNo', 'CityCode': '@Model.CityCode', 'OwnerId': '@Model.OwnerId', 'BuildingId': '@Model.BuildingId' };

            var dataAdapter = new $.jqx.dataAdapter(source, {
                loadComplete: function (data) { }
                //loadError: function (xhr, status, error) { alert('error ' + error) }
            });

            var imgUrl = function (id) {
                var url= '@Url.Content("~/Images/building.jpg")'
                return url;
            };
            var initrowdetails = function (index, parentElement, gridElement, datarecord) {
                var tabsdiv = null;
                var information = null;
                var notes = null;
                var actions = null;
                tabsdiv = $($(parentElement).children()[0]);
                if (tabsdiv != null) {
                    information = tabsdiv.find('.information');
                    //notes = tabsdiv.find('.notes');
                    actions = tabsdiv.find('.actions');

                    var title = tabsdiv.find('.title');
                    title.text(datarecord.BuildingName);

                    //info container
                    var container = $('<div style="margin: 5px;text-align:right;overflow:auto"></div>')
                    container.rtl = true;
                    container.appendTo($(information));
                    var leftcolumn = $('<div style="float: left; width: 45%;direction:rtl;"></div>');
                    var rightcolumn = $('<div style="float: right; width: 40%;direction:rtl;"></div>');
                    container.append(leftcolumn);
                    container.append(rightcolumn);

                    //var mediaLink = $('<a class="row_link" href="#">תמונות/תוכניות</a>')
                    //.on("click", function (e) {
                    //    e.preventDefault();
                    //    app_popup.mediaEditor(datarecord.BuildingId, 0, "b");
                    //});
                    
                    var propertyId = "<div style='margin: 10px;direction:rtl;'><a href='BuildingDef?id=" + datarecord.BuildingId + "'><b>קוד בניין:</b> " + datarecord.BuildingId + "</a></div>";
                    var buildingName = "<div style='margin: 10px;direction:rtl;'><b>שם הבניין:</b> " + datarecord.BuildingName + "</div>";

                    var managementContainer = $("<div style='margin: 10px;direction:rtl;'><b>חברת ניהול:</b> <a href='#' data-rel='popup' data-position-to='window' data-role='button' data-theme='a' data-inline='true'>" + datarecord.ManagementName + "</a></div>")
                    .on("click", function (e) {
                        e.preventDefault();
                        app_accounts.accountDisplay(datarecord.ManagementCompany, "חברת ניהול");
                    });



                    $(leftcolumn).append(populationDate);
                    $(leftcolumn).append(buildingName);
                    //$(leftcolumn).append(managementContainer);
                    var floorAreaMr = "<div style='margin: 10px;direction:rtl;'><b>שטח:</b> " + datarecord.SizeTotal + "</div>";
                    //var contactName = "<div style='margin: 10px;direction:rtl;'><b>איש קשר:</b> " + datarecord.BuildingAdmin + "</div>";
                    //var contactPhone = "<div style='margin: 10px;direction:rtl;'><b>טלפון:</b> " + datarecord.BuildingAdminPhone + "</div>";
                    var populationDate = "<div style='margin: 10px;direction:rtl;'><b>מועד עדכון:</b> " + datarecord.LastUpdate.toLocaleDateString() + "</div>";
                    //var ownerName = "<div style='margin: 10px;direction:rtl;'><b>בעלים:</b> " + datarecord.OwnerName + "</div>";

                    var ownerContainer = $("<div style='margin: 10px;direction:rtl;'><b>בעלים:</b> <a href='#' data-rel='popup' data-position-to='window' data-role='button' data-theme='a' data-inline='true'>" + datarecord.OwnerName + "</a></div>")
                   .on("click", function (e) {
                       e.preventDefault();
                       app_accounts.accountDisplay(datarecord.BuildingOwnerId, "בעלים");
                   });

                    $(rightcolumn).append(propertyId);
                    $(rightcolumn).append(floorAreaMr);
                    //$(rightcolumn).append(contactName);
                    //$(rightcolumn).append(contactPhone);
                    $(rightcolumn).append(ownerContainer);
                    $(rightcolumn).append(managementContainer);

                    //actions container
                    var actionscontainer = $('<div style="white-space: normal; margin: 5px;text-align:right;"></div>');
                    actionscontainer.rtl = true;
                    //actionscontainer.append(mediaLink);

                    var unitGridLink = $('<br/><a class="row_link" href="UnitGrid?id=' + datarecord.BuildingId + '&floor=0&op=1">מאגר עדכונים</a>');
                    var unitDefLink = $('<br/><a class="row_link" href="UnitDef?id=0&bid=' + datarecord.BuildingId + '&floor=0&op=1">עדכון מידע חדש</a>');

                    actionscontainer.append(unitGridLink);
                    actionscontainer.append(unitDefLink);
                    $(actions).append(actionscontainer);
                    $(tabsdiv).jqxTabs({ width: '80%', height: 170, rtl: true });
                }
            }
            // create Tree Grid
            $("#jqxgrid").jqxGrid(
            {
                width: '100%',
                autoheight: true,
                rtl: true,
                source: dataAdapter,
                localization: getLocalization('he'),
                virtualmode: true,
                rendergridrows: function (obj) {
                    //alert('virtualmode');
                    console.log(obj)
                    return obj.data;
                },
                pageable: true,
                //pagermode: 'simple',
                sortable: true,
                altrows: true,
                rowdetails: true,
                rowdetailstemplate: { rowdetails: "<div style='margin-right: 30px;float:right'><ul style='margin-right: 10px;'><li class='title'></li><li>עדכונים</li></ul><div class='information'></div><div class='actions'></div></div>", rowdetailsheight: 200 },
                //ready: function () {
                //    $("#jqxgrid").jqxGrid('showrowdetails', 0);
                //    //$("#jqxgrid").jqxGrid('showrowdetails', 1);
                //},
                initrowdetails: initrowdetails,
                columns: [
                  {
                      text: 'הוספת עדכון', dataField: 'BuildingId', width: 100, cellsalign: 'right', align: 'center', hidden: isMobile,
                      cellsrenderer: function (row, columnfield, value, defaulthtml, columnproperties) {
                          return '<div style="text-align:center"><a href="UnitDef?id=0&bid=' + value + '&floor=0&op=1" >הוספת עדכון</a></div>';

                       //return '<div style="text-align:center"><a href="BuildingDef?id=' + value + '" >הצג</a></div>';
                      }
                   },
                  { text: 'שם הבניין', dataField: 'BuildingName', cellsalign: 'right', align: 'center', width: 180 },
                  { text: 'עיר', dataField: 'CityName', cellsalign: 'right', align: 'center', width: 150 },
                  { text: 'רחוב', dataField: 'StreetName', cellsalign: 'right', align: 'center', width: 150 },
                  { text: 'מס', dataField: 'StreetNo', cellsalign: 'right', align: 'center', width: 60 },
                  { text: 'שטח', dataField: 'SizeTotal', cellsalign: 'right', align: 'center', width: 60 },
                  { text: 'בעלים עיקריים', dataField: 'OwnerName', cellsalign: 'right', align: 'center' },
                  { text: 'מועד עדכון', dataField: 'LastUpdate', type: 'date', width: 120, cellsformat: 'd', cellsalign: 'right', align: 'center' }
                ]
            });
            $('#jqxgrid').on('rowdoubleclick', function (event) {
                var args = event.args;
                var boundIndex = args.rowindex;
                var visibleIndex = args.visibleindex;
                var id = $("#jqxgrid").jqxGrid('getrowid', boundIndex);
                app.redirectTo('BuildingDef?id=' + id + '');
            });

            //var customsortfunc = function (column, direction) {
            //    alert('sort');
            //    var sortdata = new Array();
            //    if (direction == 'ascending') direction = true;
            //    if (direction == 'descending') direction = false;
            //    if (direction != null) {
            //        for (i = 0; i < data.length; i++) {
            //            sortdata.push(data[i]);
            //        }
            //    }
            //    else sortdata = data;
            //    var tmpToString = Object.prototype.toString;
            //    Object.prototype.toString = (typeof column == "function") ? column : function () { return this[column] };
            //    if (direction != null) {
            //        sortdata.sort(compare);
            //        if (!direction) {
            //            sortdata.reverse();
            //        }
            //    }
            //    source.localdata = sortdata;
            //    $("#jqxgrid").jqxGrid('updatebounddata', 'sort');
            //    Object.prototype.toString = tmpToString;
            //}
            // custom comparer.
            //var compare = function (value1, value2) {
            //    value1 = String(value1).toLowerCase();
            //    value2 = String(value2).toLowerCase();
            //    try {
            //        var tmpvalue1 = parseFloat(value1);
            //        if (isNaN(tmpvalue1)) {
            //            if (value1 < value2) { return -1; }
            //            if (value1 > value2) { return 1; }
            //        }
            //        else {
            //            var tmpvalue2 = parseFloat(value2);
            //            if (tmpvalue1 < tmpvalue2) { return -1; }
            //            if (tmpvalue1 > tmpvalue2) { return 1; }
            //        }
            //    }
            //    catch (error) {
            //        var er = error;
            //    }
            //    return 0;
            //};

            app_jqxgrid.gridFilterRtl(this, $("#grid-toolbar"), columnList, dateList);
        });


        var columnList = [
          { label: 'מספר בניין', value: 'BuildingId', checked: false },
          { label: 'שם בניין', value: 'BuildingName', checked: false },
          { label: 'עיר', value: 'CityName', checked: false },
          { label: 'רחוב', value: 'StreetName', checked: true },
          //{ label: 'שטח', value: 'SizeTotal', checked: true },
          { label: 'בעלים', value: 'OwnerName', checked: true }
        ];
        var dateList = [
         { label: 'מועד עדכון', value: 'LastUpdate', checked: false }
        ];

    </script>
}


@section featured {


}
<!--breadcrumb-->
<div class="breadcrumbs">
@Html.ActionLink("Home", "Index", "Home")>
@Html.ActionLink("Main", "Main", "Home")>
<a href="javascript:parent.history.back()">Buildings</a> >
@ViewContext.RouteData.Values["action"].ToString()
</div>



<div class="clear"></div>

<div class="global">
    <div class="container-box">

        <div class="grid-wrap rtl">
            <div class="box-title">
                <h3>רשימת בניינים</h3>
            </div>
            
            <div id="grid-toolbar" class="grid-toolbar"></div>
            <div id="jqxWidget">
                <div id="jqxgrid" style="position:relative;z-index:1;"></div>
                <div style="text-align:right">לתצוגה מפורטת יש ללחוץ על החץ הימני בשורה הרצויה</div>
             </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    app_menu.activeLayoutMenu("liBuilding");
</script>