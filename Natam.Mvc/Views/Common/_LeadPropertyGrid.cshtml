@{
    ViewBag.Title = "Buildings";
    Layout = "~/Views/Shared/_ViewIframe.cshtml";
    int id = Nistec.Types.ToInt(Request["id"]);
}

@section head {

    @Scripts.Render("~/bundles/jqx")
    @Scripts.Render("~/bundles/jqxgrid")
    <link rel="stylesheet" href="~/Scripts/app/app-form.css" type="text/css" />

    <style type="text/css">
        td {
            padding: 4px;
            height: 20px;
        }

        .row_detail {
            margin: 10px;
            direction: rtl;
        }

        .row_link {
            margin: 10px;
            direction: rtl;
            font-size: 16px;
        }

    </style>
}


@section scripts {

    <script type="text/javascript">

        $(document).ready(function () {

            // First, checks if it isn't implemented yet.
            if (!String.prototype.format) {
                String.prototype.format = function () {
                    var args = arguments;
                    return this.replace(/{(\d+)}/g, function (match, number) {
                        return typeof args[number] != 'undefined'
                          ? args[number]
                          : match
                        ;
                    });
                };
            }

            JSON.useDateParser();
            var theme = 'Arctic';

            //$("#hTitle").text('רשימת נכסים');
            
            // prepare the data
            var source =
            {
                //sort: customsortfunc,
                datatype: "json",
                datafields: [
                    { name: 'UnitId', type: 'number' },
                    { name: 'BuildingId', type: 'number' },
                    { name: 'BuildingName', type: 'string' },
                    { name: 'Address', type: 'string' },
                    { name: 'City', type: 'string' },
                    { name: 'FloorNum', type: 'number' },
                    { name: 'UnitNum', type: 'number' },
                    { name: 'UnitSize', type: 'number' },
                    { name: 'Price', type: 'number' },
                    { name: 'Populate', type: 'bool' },
                    { name: 'UserName', type: 'string' },
                    { name: 'OwnerId', type: 'number' },
                    { name: 'OwnerName', type: 'string' },
                    { name: 'Memo', type: 'string' },
                    { name: 'LastUpdate', type: 'date' },
                    { name: 'PurposeId', type: 'number' },
                    { name: 'PurposeName', type: 'string' },
                    { name: 'DealType', type: 'string' },
                    //{ name: 'DealId', type: 'number' },
                    { name: 'DealName', type: 'string' },
                    { name: 'Comment', type: 'string' },
                    { name: 'PropertyName', type: 'string' },
                    { name: 'PropertyType', type: 'number' }
                ],
                id: 'UnitId',
                type: 'POST',
                url: '@Url.Action("GetLeadPropertyList", "Crm")'
                //pagenum: 3,
                //pagesize: 20,
                //root: 'Rows',
                //beforeprocessing: function (data) {
                //    source.totalrecords = data.TotalRows;
                //},
                //pager: function (pagenum, pagesize, oldpagenum) {
                //    // callback called when a page or page size is changed.
                //}
            };

            source.data = { 'LeadId': '@id' };

            var dataAdapter = new $.jqx.dataAdapter(source, {
                loadComplete: function (data) { }
                //loadError: function (xhr, status, error) { alert('error ' + error) }
            });


            var initrowdetails = function (index, parentElement, gridElement, datarecord) {
                var tabsdiv = null;
                var information = null;
                var notes = null;
                var actions = null;
                tabsdiv = $($(parentElement).children()[0]);
                if (tabsdiv != null) {
                    information = tabsdiv.find('.information');
                    notes = tabsdiv.find('.notes');
                    actions = tabsdiv.find('.actions');

                    var title = tabsdiv.find('.title');
                    title.text(datarecord.BuildingName);

                    //info container
                    var container = $('<div style="margin: 5px;text-align:right;"></div>')
                    container.rtl = true;
                    container.appendTo($(information));
                    var leftcolumn = $('<div style="float: left; width: 45%;direction:rtl;"></div>');
                    var rightcolumn = $('<div style="float: right; width: 45%;direction:rtl;"></div>');
                    //var photocolumn = $('<div style="float: left; width: 15%;"></div>');


                    //container.append(photocolumn);
                    container.append(leftcolumn);
                    container.append(rightcolumn);

                    // var mediaLink = $('<input type="button" value="תמונות"/>')
                    //.on("click", function (e) {
                    //    e.preventDefault();
                    //    mediaEditor(datarecord.BuildingId, datarecord.UnitId, "u");
                    //});
                    // $(photocolumn).append(mediaLink);

                    var infosection = "<div class='row_detail'><b>{0}:</b>{1}</div>";

                    $(leftcolumn).append(infosection.format("מספר קומה", datarecord.FloorNum));
                    $(leftcolumn).append(infosection.format("מספר יחידה", datarecord.UnitNum));
                    $(leftcolumn).append(infosection.format("שטח", datarecord.UnitSize));
                    $(leftcolumn).append(infosection.format("מחיר", datarecord.Price));

                    $(rightcolumn).append(infosection.format("בעלים", datarecord.OwnerName));
                    $(rightcolumn).append(infosection.format("סוכן", datarecord.UserName));
                    $(rightcolumn).append(infosection.format("קוד יחידה", datarecord.UnitId));
                    $(rightcolumn).append(infosection.format("קוד בניין", datarecord.BuildingId));

                    
                    //notes container
                    var notescontainer = $('<div style="white-space: normal; margin: 5px;text-align:right;"><div style="display:block;overflow:auto;">' + datarecord.Memo + '</div></div>');


                    notescontainer.rtl = true;
                    $(notes).append(notescontainer);

                    var commentcontainer = $('<div style="white-space: normal; margin: 5px;text-align:right;"></div>');
                    commentcontainer.rtl = true;
                    var commentInput = $('<textarea style="width:100%; height:100px;direction:rtl;">' + datarecord.Comment + '</textarea>');
                    var commentButton = $('<input type="button" value="עדכון"/>')
                    .on("click", function (e) {
                        e.preventDefault();
                        commentUpdate(datarecord.UnitId, commentInput.val());
                    });
                    commentButton.rtl = true;
                    commentcontainer.append(commentInput);
                    commentcontainer.append(commentButton);

                    
                    
                    $(actions).append(commentcontainer);

                    $(tabsdiv).jqxTabs({ width: '95%', height: 170, rtl: true });
                }
            }
            // create Tree Grid
            $("#jqxgrid").jqxGrid(
            {
                width: '100%',
                height:'380px',
                //selectionmode: 'checkbox',
                autoheight: false,
                rtl: true,
                source: dataAdapter,
                localization: getLocalization('he'),
                //virtualmode: true,
                rendergridrows: function (obj) {
                    console.log(obj)
                    return obj.data;
                },
                //pageable: true,
                //pagermode: 'simple',
                scrollmode: 'logical',
                sortable: true,
                altrows: true,
                rowdetails: true,
                rowdetailstemplate: { rowdetails: "<div style='margin: 10px;'><ul style='margin-right: 30px;'><li class='title'>כללי</li><li>פרטים</li><li>הערות</li></ul><div class='information'></div><div class='notes'></div><div class='actions'></div></div>", rowdetailsheight: 200 },

                initrowdetails: initrowdetails,
                columns: [
                       {
                           text: 'פעולות', dataField: 'UnitId', width: 80, cellsalign: 'right', align: 'center',
                           cellsrenderer: function (row, columnfield, value, defaulthtml, columnproperties) {

                               //return '<div style="text-align:center;direction:rtl;margin:5px;"><a href="#" onclick="leads_propertyEdit(' + value + ',' + id + ');" >הצג</a> | <a href="#" onclick="leads_propertyRemove(' + value + ');">הסר</a></div>'
                               return '<div style="text-align:center;direction:rtl;margin:5px;"><a href="#" onclick="leads_propertyRemove(' + value + ');">הסר</a></div>'
                           }
                       },
                 { text: 'סוג יחידה', dataField: 'PropertyName', width: 80, cellsalign: 'right', align: 'center' },
                  { text: 'שם בניין', dataField: 'BuildingName', width: 120, cellsalign: 'right', align: 'center' },
                  { text: 'כתובת', dataField: 'Address', width: 150, cellsalign: 'right', align: 'center' },
                  { text: 'שטח', dataField: 'UnitSize', width: 80, cellsalign: 'right', align: 'center' },
                  { text: 'מחיר', dataField: 'Price', width: 80, cellsalign: 'right', align: 'center' },
                  { text: 'סוג עסקה', dataField: 'DealName', width: 80, cellsalign: 'right', align: 'center' },
                  { text: 'מטרה', dataField: 'PurposeName', width: 80, cellsalign: 'right', align: 'center' },
                  { text: 'מאוכלס', datafield: 'Populate', threestatecheckbox: true, columntype: 'checkbox', width: 70, cellsalign: 'right', align: 'center' },
                  //{ text: 'בעלים', dataField: 'OwnerName', cellsalign: 'right', align: 'center' },
                  //{ text: 'סוכן', dataField: 'UserName', width: 100, cellsalign: 'right', align: 'center' },
                  //{ text: 'סלולארי', dataField: 'ContactMobile', width: 150, cellsalign: 'right', align: 'center' },
                  { text: 'מועד עדכון', dataField: 'LastUpdate', type: 'date', width: 110, cellsformat: 'd', cellsalign: 'right', align: 'center' }
                ]
            });

        });

        function commentUpdate(uid, comment, async) {
            if (comment === undefined || comment == null || comment.length == 0)
            {
                app_dialog.popMessage('הערות', "נא לציין הערות", "auto");
                return;
            }
            if (typeof async === 'undefined') { async = true; }

                $.ajax({
                    async: async,
                    type: "POST",
                    url: "/Crm/LeadCommentUpdate",
                    data: "{ 'id': " + '@id' + ",'uid': " + uid + ",'comment': '" + comment + "' }",
                    contentType: "application/json; charset=utf-8",
                    //dataType: "json",
                    success: function (data) {
                        app_dialog.popMessage('הערות', 'הערה עודכנה ', "auto");
                    },
                    error: function (e) {
                        alert(e);
                    }
                });
        };

 
        function leads_propertyRefresh() {
            try {
              $("#jqxgrid").jqxGrid('source').dataBind();
            }
            catch (e) {
                alert(e);
            }
        };

        function leads_propertyRemove(id) {
            leadPropertyRemove(id, false);
            leads_propertyRefresh();
        }

        //function leads_propertyEdit(id, accid) {
        //    contactEdit(id, accid, 0);
        //    leads_propertyRefresh();
        //}


        //function leadPropertyEdit(id, pid, op, uk) {
        //    if (uk === undefined)
        //        uk = '';
        //    return dialogIframe("/Common/_ContactEdit?id=" + id + "&pid=" + pid + "&op=" + op + "&uk=" + uk, "320", "280", "אנשי קשר");
        //};

        function leadPropertyRemove(id, async) {
            if (typeof async === 'undefined') { async = true; }

            if (confirm("האם להסיר את הנכס מרשימת הנכסים " + id)) {
                $.ajax({
                    async: async,
                    type: "POST",
                    url: "/Crm/LeadPropertyRemove",
                    data: "{ 'leadId': '" + '@id' + "','unitId': '" + id + "' }",
                    contentType: "application/json; charset=utf-8",
                    //dataType: "json",
                    success: function (data) {
                        app_dialog.popMessage('רשימת נכסים', 'נכס ' + id + 'הוסר מהרשימה ', "auto");
                    },
                    error: function (e) {
                        alert(e);
                    }
                });
            }
        };

    </script>
}


@section featured {


}

<div class="clear"></div>

<div class="global">
    <div class="container-rtl">

        <div class="grid-wrap">

            @*<div style="display: inline; text-align: right; font-size: 18px; direction: rtl;">
                <h3 id="hTitle">רשימת נכסים</h3>
            </div>*@
            <div id="jqxWidget">
                <div id="jqxgrid" style="position:relative;z-index:1;"></div>
            </div>
        </div>
    </div>
</div>
